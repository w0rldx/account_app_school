// <auto-generated />
using System;
using KontoVerwaltungV4.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KontoVerwaltungV4.Migrations
{
    [DbContext(typeof(BankingContext))]
    [Migration("20200923121527_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("KontoVerwaltungV4.Konto.Konto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Betrag")
                        .HasColumnType("REAL");

                    b.Property<int>("InhaberID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KontoNummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pin")
                        .HasColumnName("pin_encrypt")
                        .HasColumnType("TEXT");

                    b.Property<string>("konto_type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("InhaberID");

                    b.ToTable("KontoSet");

                    b.HasDiscriminator<string>("konto_type").HasValue("Konto");
                });

            modelBuilder.Entity("KontoVerwaltungV4.Kunde.Kunde", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("DatenschutzErklärung")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Plz")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TelefonNummer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("KundenSet");
                });

            modelBuilder.Entity("KontoVerwaltungV4.Transaktionen.Transaktion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Beschreibung")
                        .HasColumnType("TEXT");

                    b.Property<double>("Betrag")
                        .HasColumnType("REAL");

                    b.Property<string>("Empfaenger")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdNummer")
                        .HasColumnType("TEXT");

                    b.Property<int?>("KontoID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("KontoID");

                    b.ToTable("TransaktionsSet");
                });

            modelBuilder.Entity("KontoVerwaltungV4.Konto.FestgeldKonto", b =>
                {
                    b.HasBaseType("KontoVerwaltungV4.Konto.Konto");

                    b.Property<double>("FestgeldKontoZinsSatz")
                        .HasColumnType("REAL");

                    b.HasDiscriminator().HasValue("FestgeldKonto");
                });

            modelBuilder.Entity("KontoVerwaltungV4.Konto.GiroKonto", b =>
                {
                    b.HasBaseType("KontoVerwaltungV4.Konto.Konto");

                    b.Property<double>("GiroKontoZinsSatz")
                        .HasColumnType("REAL");

                    b.HasDiscriminator().HasValue("GiroKonto");
                });

            modelBuilder.Entity("KontoVerwaltungV4.Konto.SparKonto", b =>
                {
                    b.HasBaseType("KontoVerwaltungV4.Konto.Konto");

                    b.Property<double>("SparKontoZinsSatz")
                        .HasColumnType("REAL");

                    b.HasDiscriminator().HasValue("SparKonto");
                });

            modelBuilder.Entity("KontoVerwaltungV4.Konto.TagesgeldKonto", b =>
                {
                    b.HasBaseType("KontoVerwaltungV4.Konto.Konto");

                    b.Property<double>("TagesgeldKontoZinsSatz")
                        .HasColumnType("REAL");

                    b.HasDiscriminator().HasValue("TagesgeldKonto");
                });

            modelBuilder.Entity("KontoVerwaltungV4.Konto.Konto", b =>
                {
                    b.HasOne("KontoVerwaltungV4.Kunde.Kunde", "Inhaber")
                        .WithMany("KontoList")
                        .HasForeignKey("InhaberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KontoVerwaltungV4.Transaktionen.Transaktion", b =>
                {
                    b.HasOne("KontoVerwaltungV4.Konto.Konto", null)
                        .WithMany("TransactionsList")
                        .HasForeignKey("KontoID");
                });
#pragma warning restore 612, 618
        }
    }
}
